# Docker Compose ファイルのバージョンを指定
version: '3.8'

# サービス（コンテナ）の定義
services:
  #--------------------------------------------------------------------------
  # Nginx (Webサーバー)
  #--------------------------------------------------------------------------
  nginx:
    # ビルドに使用するDockerfileの場所を指定
    # このdocker-compose.ymlからの相対パスで'./nginx'ディレクトリを指定
    build:
      context: ./nginx
    # コンテナ名を.envファイルの値を使って定義
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    # ホストマシンとコンテナのポートをマッピング
    # ホストの${NGINX_PORT}番ポートをコンテナの80番ポートに接続
    ports:
      - "${NGINX_PORT}:80"
    # ボリューム（ディレクトリ/ファイル）のマウント
    volumes:
      # アプリケーションのソースコードをマウント
      # ホストの'../my-app'をコンテナの'/var/www/html'に同期
      - ../my-app:/var/www/html
      # Nginxの設定ファイルをマウント
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # ログファイルの出力先をマウント
      - ./errors:/var/log/nginx
    # 依存関係を定義 (phpサービスが起動してからnginxを起動)
    depends_on:
      - php
    # 接続するネットワークを指定
    networks:
      - app-network

  #--------------------------------------------------------------------------
  # PHP-FPM
  #--------------------------------------------------------------------------
  php:
    build:
      context: ./php
    container_name: ${COMPOSE_PROJECT_NAME}-php
    volumes:
      - ../my-app:/var/www/html
      # PHPのカスタム設定ファイルをマウント
      - ./php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      # PHPのエラーログファイルをマウント
      - ./errors/php_errors.log:/var/log/php_errors.log
    # 環境変数をコンテナ内に設定 (DB接続情報)
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${MARIADB_DATABASE}
      DB_USERNAME: ${MARIADB_USER}
      DB_PASSWORD: ${MARIADB_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network

  #--------------------------------------------------------------------------
  # MariaDB (データベース)
  #--------------------------------------------------------------------------
  db:
    build:
      context: ./db
      # .envファイルからMariaDBのバージョンを渡す
      args:
        MARIADB_VERSION: ${MARIADB_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-db
    # コンテナが停止した場合、常に再起動する
    restart: always
    # コンテナの標準入出力をコンテナのttyにアタッチ
    tty: true
    # データベースの初期設定を行うための環境変数
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MARIADB_DATABASE}
      MYSQL_USER: ${MARIADB_USER}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD}
    volumes:
      # データベースのデータを永続化するための名前付きボリューム
      - db-data:/var/lib/mysql
      # MariaDBのカスタム設定ファイルをマウント
      - ./db/my.conf:/etc/mysql/conf.d/my.conf
    ports:
      # ホストから直接DBに接続したい場合はコメントを外す (例: 3306:3306)
      # - "3306:3306"
    networks:
      - app-network

  #--------------------------------------------------------------------------
  # phpMyAdmin (データベース管理ツール)
  #--------------------------------------------------------------------------
  phpmyadmin:
    # 公式のphpMyAdminイメージを使用
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    restart: always
    # phpMyAdminが接続するDBサーバーの情報を環境変数で設定
    environment:
      PMA_HOST: db # 'db'はMariaDBのサービス名
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      - db
    networks:
      - app-network

#--------------------------------------------------------------------------
# ボリュームの定義
#--------------------------------------------------------------------------
volumes:
  # データベース永続化用の名前付きボリューム
  db-data:
    driver: local

#--------------------------------------------------------------------------
# ネットワークの定義
#--------------------------------------------------------------------------
networks:
  # サービス間通信用のブリッジネットワーク
  app-network:
    driver: bridge
