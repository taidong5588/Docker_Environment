# Docker Compose file format version
version: '3.8'

services:
  # Nginx Web Server
  nginx:
    build:
      context: ./docker-config/nginx  # ← この行を追加
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      # アプリケーションのソースコード
      - ./my-app:/var/www/html
      # Nginx設定ファイル
      - ./docker-config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      # エラーログ
      - ./docker-config/errors:/var/log/nginx
    depends_on:
      - php
    networks:
      - app-network

  # PHP-FPM Service
  php:
    build:
      context: ./docker-config/php
    container_name: ${COMPOSE_PROJECT_NAME}-php
    volumes:
      # アプリケーションのソースコード
      - ./my-app:/var/www/html
      # PHP設定ファイル
      - ./docker-config/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      # PHPエラーログ
      - ./docker-config/errors/php_errors.log:/var/log/php_errors.log
    environment:
      # データベース接続情報
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${MARIADB_DATABASE}
      DB_USERNAME: ${MARIADB_USER}
      DB_PASSWORD: ${MARIADB_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network

  # MariaDB Database Service
  db:
    image: mariadb:${MARIADB_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-db
    restart: always
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MARIADB_DATABASE}
      MYSQL_USER: ${MARIADB_USER}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD}
    volumes:
      # データベースの永続化
      - db-data:/var/lib/mysql
      # MariaDB設定ファイル
      - ./docker-config/db/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      # 外部から接続したい場合はコメントを外す
      # - "3306:3306"
    networks:
      - app-network

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    restart: always
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    depends_on:
      - db
    networks:
      - app-network

# Volumes for data persistence
volumes:
  db-data:
    driver: local

# Networks for services communication
networks:
  app-network:
    driver: bridge
